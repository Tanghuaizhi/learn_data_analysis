subset(pf, !is.na(tenure)) %>%
mutate(friend_rate = friend_count / tenure)
View(pf)
summary(subset(pf, !is.na(tenure)) %>%
mutate(friend_rate = friend_count / tenure))
subset(pf, !is.na(tenure)) %>%
mutate(friend_rate = friend_count / tenure) %>%
select(friend_rate)
pf$friend_rate <- subset(pf, !is.na(tenure)) %>%
mutate(friend_rate = friend_count / tenure) %>%
select(friend_rate)
summary(pf$friend_rate <- subset(pf, !is.na(tenure)) %>%
mutate(friend_rate = friend_count / tenure) %>%
select(friend_rate))
summary(subset(pf, !is.na(tenure)) %>%
mutate(friend_rate = friend_count / tenure) %>%
select(friend_rate))
table(subset(pf, !is.na(tenure)) %>%
mutate(friend_rate = friend_count / tenure) %>%
select(friend_rate))
summary(subset(pf, !is.na(tenure)) %>%
mutate(friend_rate = friend_count / tenure) %>%
select(friend_rate))
summary(subset(pf, tenure >= 1) %>%
mutate(friend_rate = friend_count / tenure) %>%
select(friend_rate))
# anwser
with(subset(pf, tenure >= 1), summary(friend_count / tenure))
names(pf)
ggplot(data = subset(pf, tenure >= 1), aes(x = age, y = friendships_initiated)) +
geom_line(color = year_joined.bucke)
ggplot(data = subset(pf, tenure >= 1), aes(x = age, y = friendships_initiated)) +
geom_line(color = pf$year_joined.bucke)
ggplot(data = subset(pf, tenure >= 1), aes(x = tenure, y = friendships_initiated)) +
geom_line()
ggplot(data = subset(pf, tenure >= 1), aes(x = tenure, y = friendships_initiated)) +
geom_line(color = year_joined.bucke)
pf_tenure <- subset(pf, tenure >= 1)
ggplot(data = subset(pf, tenure >= 1), aes(x = tenure, y = friendships_initiated)) +
geom_line(color = year_joined.bucke)
ggplot(data = pf_tenure, aes(x = tenure, y = friendships_initiated)) +
geom_line(color = year_joined.bucke)
ggplot(data = pf_tenure, aes(x = tenure, y = friendships_initiated)) +
geom_line(aes(color = year_joined.bucke), stat = 'summary', fun.y = mean)
# anwser
ggplot(data = subset(pf, tenure >= 1), aes(x = tenure, y = friendships_initiated / tenure)) +
geom_line(aes(color = year_joined.bucke))
ggplot(data = pf_tenure, aes(x = tenure, y = friendships_initiated / tenure)) +
geom_line(aes(color = year_joined.bucke), stat = 'summary', fun.y = mean)
# anwser
ggplot(data = subset(pf, tenure >= 1), aes(x = tenure, y = friendships_initiated / tenure)) +
geom_line(aes(color = year_joined.bucke))
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure >= 1)) +
geom_line(aes(color = year_joined.bucket),
stat = 'summary',
fun.y = mean)
names(pf)[names(df) == 'year_joined.bucke'] <- 'year_joined.bucke'
names(pf)
> names(pf)[names(df) == 'year_joined.bucke'] <- 'year_joined.bucket'
names(pf)[names(df) == 'year_joined.bucke'] <- 'year_joined.bucket'
names(pf)
names(pf)[names(pf) == 'year_joined.bucke'] <- 'year_joined.bucket'
names(pf)
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure >= 1)) +
geom_line(aes(color = year_joined.bucket),
stat = 'summary',
fun.y = mean)
ggplot(aes(x = 7 * round(tenure / 7), y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean)
ggplot(aes(x = 30 * round(tenure / 30), y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean)
ggplot(aes(x = 90 * round(tenure / 90), y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean)
?geom_smooth
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean) +
geom_smooth()
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean) +
geom_smooth(span=0.3)
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean) +
geom_smooth(span=0.8)
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean) +
geom_smooth(method = 'line')
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean) +
geom_smooth(method = 'lm')
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean) +
geom_smooth(span = 0.3)
#answer
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket)) +
geom_smooth(span = 0.3)
#answer
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_smooth(aes(color = year_joined.bucket)) +
#answer
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_smooth(aes(color = year_joined.bucket))
#answer
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure >= 1)) +
geom_smooth(aes(color = year_joined.bucket))
yo <- read.csv('yogurt.csv')
yo
str(yo)
# 转换id变量，由int到factor
yo$id <- factor(yo$id)
str(yo)
ggplot(data = yo, aes(x = price)) +
geom_histogram()
ggplot(data = yo, aes(x = price)) +
geom_histogram(bins = 30)
ggplot(data = yo, aes(x = price)) +
geom_histogram(bins = 10)
summary(yo)
length(yo$price)
table(yo$price)
?transform
View(yo)
View(yo)
names(yo)
transform(yo, a = (strawberry + blueberry + pina.colada + plain + mixed.berry))
colnames(yo[a]) <- all.purchases
colnames(yo[a]) <- 'all.purchases'
colnames(yo$a) <- 'all.purchases'
names(yo)[names(yo) == 'a'] <- 'all.purchases'
yo
names(yo)
transform(yo, all.purchases = (strawberry + blueberry + pina.colada + plain + mixed.berry))
yo
yo <- transform(yo, all.purchases = (strawberry + blueberry + pina.colada + plain + mixed.berry))
yo
ggplot(data = yo, aes(x = time, y = price)) +
geom_point()
ggplot(data = yo, aes(x = time, y = price)) +
geom_point(alpha = 0.3)
ggplot(data = yo, aes(x = time, y = price)) +
geom_jitter(alpha = 0.3)
ggplot(data = yo, aes(x = time, y = price)) +
geom_jitter(alpha = 0.1)
# answer
ggplot(data = yo, aes(x = time, y = price)) +
geom_jitter(alpha = 1/4, shape = 21)
# answer
ggplot(data = yo, aes(x = time, y = price)) +
geom_jitter(alpha = 1/4, shape = 21, fill = I('#F79420'))
sample.ids <- sample(levels(yo$id), 16)
sample.ids
length(sample.ids)
?levels
?sample
# set the seed for reproducible results
set.seed(4230)
ggplot(data = subset(yo, id %in% sample.ids),
aes(x = time, y = price)) +
facet_wrap( ~ id) +
geom_line()
ggplot(data = subset(yo, id %in% sample.ids),
aes(x = time, y = price)) +
facet_wrap( ~ id) +
geom_line() +
geom_point(aes(size = all.purchases), pch = 1)
install.packages('GGally')
theme_set(theme_minimal(20))
# set the seed for reproducible results
set.seed(1836)
names(pf)
names(pf_subset)
pf_subset <- pf[,c(2:15)]
names(pf_subset)
ggpairs(pf_subset[sample.int(nrow(pf_subset),1000),])
#install.packages('GGally')
library(GGally)
theme_set(theme_minimal(20))
# set the seed for reproducible results
set.seed(1836)
pf_subset <- pf[,c(2:15)]
names(pf_subset)
ggpairs(pf_subset[sample.int(nrow(pf_subset),1000),])
nci <- read.csv('nci.tsv', sep = '\t')
# changing the colnames to produce a nicer plot
colnames(nci) <- c(1:64)
# answer
nci <- read.table('nci.tsv')
# answer
nci <- read.table('nci.tsv')
# changing the colnames to produce a nicer plot
colnames(nci) <- c(1:64)
nci <- read.csv('nci.tsv', sep = '\t')
str(nci)
summary(nci)
# answer
nci <- read.table('nci.tsv')
# changing the colnames to produce a nicer plot
colnames(nci) <- c(1:64)
summary(nci)
str(nci)
nci.long.samp <- melt(as.matrix(nci[1:200,]))
library(reshape2)
nci.long.samp <- melt(as.matrix(nci[1:200,]))
names(nci.long.samp) <- c("gene", "case", "value")
head(nci.long.samp)
ggplot(aes(y = gene, x = case, fill = value),
data = nci.long.samp) +
geom_tile() +
scale_fill_gradientn(colours = colorRampPalette(c("blue", "red"))(100))
?diamond
??diamond
setwd("D:/learn_data_analysis/R basic/lesson45")
setwd("D:/learn_data_analysis/R basic/lesson5")
getwd()
library(ggplot2)
library(diamonds)
data(diamonds)
names(diamonds)
ggplot(data = diamonds, aes(x = price)) +
geom_histogram()
ggplot(data = diamonds, aes(x = price, binwidth = 10)) +
geom_histogram()
ggplot(data = diamonds, aes(x = price), binwidth = 10) +
geom_histogram()
ggplot(data = diamonds, aes(x = price)) +
geom_histogram(binwidth = 10)
ggplot(data = diamonds, aes(x = price)) +
geom_histogram(binwidth = 10) +
facet_grid( ~ cut)
str(diamonds)
ggplot(data = diamonds, aes(x = price)) +
geom_histogram(color = cut,binwidth = 10) +
facet_grid( ~ color)
ggplot(data = diamonds, aes(x = price)) +
geom_histogram(color = cut) +
facet_wrap( ~ color)
ggplot(data = diamonds, aes(x = price)) +
geom_histogram(aes(color = cut)) +
facet_wrap( ~ color)
ggplot(data = diamonds, aes(x = price)) +
geom_histogram(aes(color = cut)) +
facet_wrap( ~ color) +
scale_fill_brewer(type = 'qual')
ggplot(data = diamonds, aes(x = price)) +
geom_histogram(aes(color = cut)) +
facet_wrap( ~ color) +
scale_x_log10()
ggplot(data = diamonds, aes(x = price)) +
geom_histogram(aes(color = cut, type = 'qual')) +
facet_wrap( ~ color) +
scale_x_log10()
ggplot(data = diamonds, aes(x = price)) +
geom_histogram(aes(color = cut)) +
facet_wrap( ~ color) +
scale_x_log10() +
scale_fill_brewer(palette = "Set1")
ggplot(data = diamonds, aes(x = price)) +
geom_histogram(aes(color = cut)) +
facet_wrap( ~ color) +
scale_x_log10() +
scale_fill_brewer()
ggplot(data = diamonds, aes(x = price)) +
geom_histogram() +
facet_wrap( ~ color) +
scale_x_log10() +
scale_fill_brewer()
ggplot(data = diamonds, aes(x = price)) +
geom_histogram() +
facet_wrap( ~ color) +
scale_x_log10() +
scale_fill_brewer(type = 'qual')
ggplot(data = diamonds, aes(x = price)) +
geom_histogram() +
facet_wrap( ~ color) +
scale_x_log10() +
scale_fill_brewer(type = 'seq')
ggplot(data = diamonds, aes(x = price)) +
geom_histogram() +
facet_wrap( ~ color) +
scale_x_log10() +
scale_fill_brewer(type = 'qual', palette = 1)
ggplot(data = diamonds, aes(x = price)) +
geom_histogram(color = cut) +
facet_wrap( ~ color) +
scale_x_log10() +
scale_fill_brewer(type = 'qual', palette = 1)
ggplot(data = diamonds, aes(x = price)) +
geom_histogram(aes(color = cut)) +
facet_wrap( ~ color) +
scale_x_log10() +
scale_fill_brewer(type = 'qual', palette = 1)
ggplot(data = diamonds, aes(x = price)) +
geom_histogram(aes(fill = cut)) +
facet_wrap( ~ color) +
scale_x_log10() +
scale_fill_brewer(type = 'qual', palette = 1)
ggplot(data = diamonds, aes(x = price)) +
geom_histogram(aes(fill = cut)) +
facet_wrap( ~ color) +
scale_x_log10() +
scale_fill_brewer(type = 'qual')
ggplot(data = diamonds, aes(x = price)) +
geom_histogram(aes(fill = cut)) +
facet_wrap( ~ color) +
scale_x_log10()
ggplot(data = diamonds, aes(x = price)) +
geom_histogram(aes(fill = cut)) +
facet_wrap( ~ color) +
scale_x_log10() +
scale_fill_brewer(type = 'qual')
ggplot(data = diamonds, aes(x = price, y = table)) +
geom_point()) +
ggplot(data = diamonds, aes(x = price, y = table)) +
geom_point() +
scale_fill_brewer(type = 'qual')
ggplot(data = diamonds, aes(x = table, y = price)) +
geom_point() +
scale_fill_brewer(type = 'qual')
ggplot(data = diamonds, aes(x = table, y = price)) +
geom_point(aes(color = cut)) +
scale_fill_brewer(type = 'qual')
ggplot(data = diamonds, aes(x = table, y = price)) +
geom_point(aes(color = cut)) +
scale_color_brewer(type = 'qual')
ggplot(data = diamonds, aes(x = table, y = price)) +
geom_point(aes(color = cut)) +
xlim(50, 80) +
scale_color_brewer(type = 'qual')
ggplot(data = diamonds, aes(x = table, y = price)) +
geom_point(aes(color = cut)) +
scale_x_continuous(breaks = c(50,80,2)) +
scale_color_brewer(type = 'qual')
ggplot(data = diamonds, aes(x = table, y = price)) +
geom_point(aes(color = cut)) +
scale_x_continuous(breaks = seq(50,80,2)) +
scale_color_brewer(type = 'qual')
ggplot(data = diamonds, aes(x = table, y = price)) +
geom_point(aes(color = cut)) +
scale_x_continuous(breaks = seq(50,80,2), limits = (50, 80)) +
ggplot(data = diamonds, aes(x = table, y = price)) +
geom_point(aes(color = cut)) +
scale_x_continuous(breaks = seq(50,80,2), limits = c(50,80)) +
scale_color_brewer(type = 'qual')
ggplot(data = diamonds, aes(x = table, y = price)) +
geom_point(aes(color = cut), alpha = 1/10) +
scale_x_continuous(breaks = seq(50,80,2), limits = c(50,80)) +
scale_color_brewer(type = 'qual')
ggplot(data = diamonds, aes(x = table, y = price)) +
geom_point(aes(color = cut), alpha = 1/5) +
scale_x_continuous(breaks = seq(50,80,2), limits = c(50,80)) +
scale_color_brewer(type = 'qual')
data <- transform(data, volume = x * y * z)
diamonds <- transform(diamonds, volume = x * y * z)
ggplot(data = diamonds, aes(x = volume, y = price)) +
geom_point()
ggplot(data = diamonds, aes(x = volume, y = price)) +
geom_point() +
scale_x_continuous(limits = c(0, 350))
ggplot(data = diamonds, aes(x = volume, y = price)) +
geom_point() +
scale_x_continuous(limits = c(0, 350)) +
scale_y_log10()
ggplot(data = subset(diamonds, !is.na(volume)) aes(x = volume, y = price)) +
ggplot(data = subset(diamonds, !is.na(volume)), aes(x = volume, y = price)) +
geom_point() +
scale_x_continuous(limits = c(0, 350)) +
scale_y_log10()
ggplot(data = subset(diamonds, volume > 0), aes(x = volume, y = price)) +
geom_point() +
scale_x_continuous(limits = c(0, 350)) +
scale_y_log10()
geom_point(aes(color = clarity) +
ggplot(data = subset(diamonds, volume > 0), aes(x = volume, y = price)) +
geom_point(aes(color = clarity)) +
scale_x_continuous(limits = c(0, 350)) +
scale_y_log10()
ggplot(data = subset(diamonds, volume > 0), aes(x = volume, y = price)) +
ggplot(data = subset(diamonds, volume > 0), aes(x = volume, y = price)) +
geom_point(aes(color = clarity)) +
scale_x_continuous(limits = c(0, 350))
ggplot(data = subset(diamonds, volume > 0), aes(x = volume, y = price)) +
geom_point(aes(color = clarity)) +
scale_x_continuous(limits = c(0, 350)) +
scale_y_log10()
ggplot(data = subset(diamonds, volume > 0), aes(x = volume, y = price)) +
geom_point(aes(color = clarity)) +
scale_x_continuous(limits = c(0, 350)) +
scale_y_log10() +
scale_color_brewer(type = 'div')
pf <- read.csv('pseudo_facebook.tsv', sep = '\t')
names(pf)
pf <- transform(pf, prop_initiated = friendships_initiated / friend_count)
names(pf)
ggplot(data = pf, aes(x = prop_initiated)) +
geom_hist()
ggplot(data = pf, aes(x = prop_initiated)) +
geom_histogram()
pf$year_joined.bucket <- cut(pf$year_joined, breaks = c(2004,2009, 2011, 2012, 2014))
pf$year_joined <- 2014 - ceiling(pf$tenure/365)
pf$year_joined.bucket <- cut(pf$year_joined, breaks = c(2004,2009, 2011, 2012, 2014))
ggplot(data = pf, aes(x = prop_initiated, y = tenure)) +
geom_line(color = year_joined.bucket)
ggplot(data = pf, aes(x = prop_initiated, y = tenure)) +
geom_line(aes(color = year_joined.bucket))
ggplot(data = pf, aes(x = tenure, y = prop_initiated)) +
geom_line(aes(color = year_joined.bucket))
ggplot(data = pf, aes(x = tenure, y = prop_initiated)) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median)
ggplot(data = pf, aes(x = tenure, y = prop_initiated)) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median) +
smooth()
ggplot(data = pf, aes(x = tenure, y = prop_initiated)) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median) +
geom_smooth()
ggplot(data = pf, aes(x = tenure, y = prop_initiated)) +
geom_smooth(aes(color = year_joined.bucket), stat = 'summary', fun.y = median)
ggplot(data = pf, aes(x = tenure, y = prop_initiated)) +
geom_smooth(aes(color = year_joined.bucket))
ggplot(data = pf, aes(x = tenure, y = prop_initiated)) +
geom_smooth(aes(color = year_joined.bucket), linetype = 2)
summary(pf$prop_initiated)
levels(pf$year_joined.bucket)
summary(subset(pf, pf$year_joined.bucket == '(2012,2014]')$prop_initiated)
diamonds <- transform(diamonds, ratio = price/carat)
trans?form
?transform
ggplot(data = diamonds, aes(x = cut, y = ratio)) +
geom_point(color = color) +
facet_wrap( ~ clarity)
ggplot(data = diamonds, aes(x = cut, y = ratio)) +
geom_point(aes(color = color)) +
facet_wrap( ~ clarity)
ggplot(data = diamonds, aes(x = cut, y = price/carat)) +
geom_point(aes(color = color)) +
facet_wrap( ~ clarity)
ggplot(data = diamonds, aes(x = cut, y = ratio)) +
geom_point(aes(color = color)) +
facet_wrap( ~ clarity)
ggplot(data = diamonds, aes(x = cut, y = ratio)) +
geom_point(aes(color = color)) +
facet_wrap( ~ clarity) +
scale_color_brewer(type = 'div')
ggplot(data = diamonds, aes(x = cut, y = price/carat)) +
geom_jitter(aes(color = color)) +
facet_wrap( ~ clarity) +
scale_color_brewer(type = 'div')
library(ggplot2)
data(diamonds)
getwd()
ggplot(data = diamonds,aes(x = weght, y = price)) +
geom_point()
ggplot(data = diamonds,aes(x = carat, y = price)) +
geom_point()
range(diamonds$carat)
?quantile
range(diamonds$price)
ggplot(data = diamonds,aes(x = carat, y = price)) +
geom_point() +
coord_trans(limx = c(quantile(diamonds$carat, 0.01), 5.01), limy = c(quantile(diamonds$price, 0.01), 18823))
# answer
ggplot(data = diamonds,aes(x = carat, y = price)) +
coord_trans(limx = c(0, quantile(diamonds$carat, 0.99)),
limy = c(0, quantile(diamonds$price, 0.99))) +
geom_point(fill = I('#F79420'), color = I('black'))
# answer
ggplot(data = diamonds,aes(x = carat, y = price)) +
coord_trans(limx = c(0, quantile(diamonds$carat, 0.99)),
limy = c(0, quantile(diamonds$price, 0.99))) +
geom_point(fill = I('#F79420'), color = I('black'), shape = 21)
ggplot(data = diamonds,aes(x = carat, y = price)) +
coord_trans(limx = c(0, quantile(diamonds$carat, 0.99)),
limy = c(0, quantile(diamonds$price, 0.99))) +
geom_point(fill = I('#F79420'), color = I('black'), shape = 21) +
state_smooth(method = 'lm')
ggplot(data = diamonds,aes(x = carat, y = price)) +
coord_trans(limx = c(0, quantile(diamonds$carat, 0.99)),
limy = c(0, quantile(diamonds$price, 0.99))) +
geom_point(fill = I('#F79420'), color = I('black'), shape = 21) +
stat_smooth(method = 'lm')
