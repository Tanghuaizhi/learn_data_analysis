?geom_point
ggplot(data = pf.fc_by_age, aes(x = age, y = friend_count_mean)) +
geom_point()
ggplot(data = pf.fc_by_age, aes(x = age, y = friend_count_mean)) +
geom_line()
ggplot(data = pf.fc_by_age, aes(x = age, y = friend_count_mean)) +
geom_point()
ggplot(data = pf.fc_by_age, aes(x = age, y = friend_count_mean)) +
geom_histogram()
ggplot(data = pf.fc_by_age, aes(x = age, y = friend_count_mean)) +
geom_histogramline()
ggplot(data = pf.fc_by_age, aes(x = age, y = friend_count_mean)) +
geom_line()
ggplot(data = pf, aes(x = age, y = friend_count)) +
geom_point(alpha = 1/20, position = position_jitter(h = 0)) +
xlim(13, 90) +
coord_trans(y = 'sqrt')
ggplot(data = pf, aes(x = age, y = friend_count)) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = 'orange') +
xlim(13, 90) +
coord_trans(y = 'sqrt')
ggplot(data = pf, aes(x = age, y = friend_count)) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = 'orange') +
xlim(13, 90) +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = mean)
ggplot(data = pf, aes(x = age, y = friend_count)) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = 'orange') +
xlim(13, 90) +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = median)
ggplot(data = pf, aes(x = age, y = friend_count)) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = 'orange') +
xlim(13, 90) +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = mean)
ggplot(data = pf, aes(x = age, y = friend_count)) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = 'orange') +
xlim(13, 90) +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile, probs = 0.1)
ggplot(data = pf, aes(x = age, y = friend_count)) +
xlim(13, 90) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = 'orange') +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile, probs = .1)
?coord_cartesian
?quantile
ggplot(data = pf, aes(x = age, y = friend_count)) +
coord_cartesian(xlim = c(13, 90)) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = 'orange') +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile())
ggplot(data = pf, aes(x = age, y = friend_count)) +
coord_cartesian(xlim = c(13, 90)) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = 'orange') +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile,    fun.args = list(probs = .9))
ggplot(data = pf, aes(x = age, y = friend_count)) +
coord_cartesian(xlim = c(13, 90)) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = 'orange') +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile,    fun.args = list(probs = .9),
linetype = 2, color = 'blue')
ggplot(data = pf, aes(x = age, y = friend_count)) +
coord_cartesian(xlim = c(13, 90)) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = 'orange') +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .1),
linetype = 2, color = 'blue')
ggplot(data = pf, aes(x = age, y = friend_count)) +
coord_cartesian(xlim = c(13, 90)) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = 'orange') +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .1),
linetype = 2, color = 'blue')
ggplot(data = pf, aes(x = age, y = friend_count)) +
coord_cartesian(xlim = c(13, 90)) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = 'orange') +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .1),
linetype = 2, color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .9),
linetype = 2, color = 'blue')
ggplot(data = pf, aes(x = age, y = friend_count)) +
coord_cartesian(xlim = c(13, 90)) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = 'orange') +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .1),
linetype = 2, color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .5),
linetype = 1, color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .9),
linetype = 2, color = 'blue')
?coord_cartesian
ggplot(data = pf, aes(x = age, y = friend_count)) +
coord_cartesian(xlim = c(13, 90)) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = 'orange') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .1),
linetype = 2, color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .5),
linetype = 1, color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .9),
linetype = 2, color = 'blue')
ggplot(data = pf, aes(x = age, y = friend_count)) +
coord_cartesian(xlim = c(13, 970)) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = 'orange') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .1),
linetype = 2, color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .5),
linetype = 1, color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .9),
linetype = 2, color = 'blue')
ggplot(data = pf, aes(x = age, y = friend_count)) +
coord_cartesian(xlim = c(13, 70)) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = 'orange') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .1),
linetype = 2, color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .5),
linetype = 1, color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .9),
linetype = 2, color = 'blue')
ggplot(data = pf, aes(x = age, y = friend_count)) +
coord_cartesian(xlim = c(13, 70), ylim = c(0, 1000),) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = 'orange') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .1),
linetype = 2, color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .5),
linetype = 1, color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .9),
linetype = 2, color = 'blue')
?core.test
??core.test
?cor.test
cor.test(x = pf$age, y = pf$friend_count)
cor.test()
?subset
with(subset(pf, age > 13 | age <70), cor.test(age, friend_count))
with(subset(pf, age > 13 & age <70), cor.test(age, friend_count))
names(pf
)
ggplot(data = pf, aes(x = likes_received, y = www_likes_received)) +
geom_point()
?coord_trans
ggplot(data = pf, aes(x = www_likes_received, y = likes_received)) +
geom_point() +
coord_trans('')
ggplot(data = pf, aes(x = www_likes_received, y = likes_received)) +
geom_point()
ggplot(data = pf, aes(x = www_likes_received, y = likes_received)) +
geom_point() +
xlim(0, quantile(pf$www_likes_received, 0.95))
ggplot(data = pf, aes(x = www_likes_received, y = likes_received)) +
geom_point() +
xlim(0, quantile(pf$www_likes_received, 0.95))+
ylim(0, quantile(pf$likes_received, 0.95))
geom_smooth(method = 'lm', color = 'red)
ggplot(data = pf, aes(x = www_likes_received, y = likes_received)) +
geom_point() +
xlim(0, quantile(pf$www_likes_received, 0.95)) +
ylim(0, quantile(pf$likes_received, 0.95)) +
geom_smooth(method = 'lm', color = 'red')
?geom_smooth
ggplot(data = pf, aes(x = www_likes_received, y = likes_received)) +
geom_point() +
xlim(0, quantile(pf$www_likes_received, 0.95)) +
ylim(0, quantile(pf$likes_received, 0.95)) +
geom_smooth(method = "lm", color = 'red')
ï¼Ÿcor.test
?cor.test
cor.test(x = www_likes_received, y = likes_received, method = 'person')
with(pf, cor.test(x = www_likes_received, y = likes_received, method = 'person'))
with(pf, cor.test(x = www_likes_received, y = likes_received, method = 'pearson'))
install.packages('alr3')
library(alr3)
options(useFancyQuotes = FALSE)
library(alr3)
library(alr3)
Sys.setlocale("LC_ALL","Chinese")
install.packages('alr3')
install.packages("alr3")
library(alr3)
library(ggplot2)
data("Mitchell")
?Mitchell
data("Mitchell")
data(Mitchell)
data(Mitchell)
head(Mitchell)
names(Mitchell)
ggplot(data = Mitchell, aes(x = 'Month', y = 'Temp'))
ggplot(data = Mitchell, aes(x = 'Month', y = 'Temp')) +
geom_point()
str(functionName)
str(geom_point)
ggplot(data = Mitchell, aes(x = Month, y = Temp)) +
geom_point()
?cor.test
cor.test(Mitchell$Month, Mitchell$Temp, method = 'pearson')
?geom_bar
range(Mitchell$Month)
ggplot(data = Mitchell, aes(x = Month, y = Temp)) +
geom_bar() +
scale_x_continuous(breaks = seq(0, 203, 12))
ggplot(data = Mitchell, aes(x = Month, y = Temp)) +
geom_point() +
scale_x_continuous(breaks = seq(0, 203, 12))
ggplot(aes(x=(Month%%12),y=Temp),data=Mitchell)+
geom_point()
x <- seq(0, 4*pi, pi/20)
y <- cos(x)
qplot(x = x, y = y)
dcor.ttest(x, y)
library(energy)
install(energy)
install.packages(energy)
install.packages('energy')
library(energy)
x <- seq(0, 4*pi, pi/20)
y <- cos(x)
qplot(x = x, y = y)
dcor.ttest(x, y)
cor.test(x, y)
ggplot(aes(x = age, y = friend_count_mean), data = pf.fc_by_age) +
geom_line()
ggplot(aes(x = age, y = friend_count_mean), data = pf.fc_by_age) +
geom_line()
head(pf.fc_by_age)
head(pf.fc_by_age, 10)
pf.fc_by_age[17:19,]
names(pf)
head(pf$dob_month)
head(pf, 10)
pf$age_with_month <- pf$age + (12 - pf$dob_month)/12
head(pf, 10)
names(pf)
age_group <- group_by(pf, age_with_month)
?group_by
library(dplyr)
age_with_month_group <- group_by(pf, age_with_month)
age_with_month_group
?group_by
names(pf)
pf.fc_by_age_months <- pf %>%
group_by(age_with_month) %>%
summarise(friend_count_mean = mean(friend_count),
friend_coun_median = median(friend_count),
n = n()) %>%
arrange(age_with_month)
head(pf.fc_by_age_months, 20)
names(pf.fc_by_age_months)
ggplot(data = pf.fc_by_age_months, aes(x = age_with_month, y = friend_count_mean)) +
geom_line()
?xlim
ggplot(data = pf.fc_by_age_months, aes(x = age_with_month, y = friend_count_mean)) +
geom_line() +
xlim(0, 71)
range(pf.fc_by_age_months$age_with_month)
ggplot(data = pf.fc_by_age_months, aes(x = age_with_month, y = friend_count_mean)) +
geom_line() +
xlim(13, 71)
ggplot(data = pf.fc_by_age_months, aes(x = age_with_month, y = friend_count_mean)) +
geom_line() +
coord_cartesian(xlim = c(13, 71), ylim = c(0, 500))
names(pf.fc_by_age_months)
p1 <- ggplot(data = subset(pf.fc_by_age, age < 71),
aes(x = age, y = friend_count_mean)) +
geom_line()
p2 <- ggplot(data = subset(pf.fc_by_age_months, age < 71),
aes(x = age_with_month, y = friend_count_mean)) +
geom_line()
library(gridExtra)
grid.arrange(p2, p1, ncol =1)
p2 <- ggplot(data = subset(pf.fc_by_age_months, age_with_month < 71),
aes(x = age_with_month, y = friend_count_mean)) +
geom_line()
grid.arrange(p2, p1, ncol =1)
p3 <- ggplot(data = subset(pf, age < 71),
aes(x = round(age / 5) * 5, y = friend_count)) +
geom_line(stat = 'summary', fun.y = mean)
grid.arrange(p2, p1, p3, ncol =1)
p1 <- ggplot(data = subset(pf.fc_by_age, age < 71),
aes(x = age, y = friend_count_mean)) +
geom_line() +
geom_smooth()
p2 <- ggplot(data = subset(pf.fc_by_age_months, age_with_month < 71),
aes(x = age_with_month, y = friend_count_mean)) +
geom_line() +
geom_smooth()
p3 <- ggplot(data = subset(pf, age < 71),
aes(x = round(age / 5) * 5, y = friend_count)) +
geom_line(stat = 'summary', fun.y = mean)
library(gridExtra)
grid.arrange(p2, p1, p3, ncol =1)
library(ggplot2)
getwd()
setwd("D:/learn_data_analysis/R basic/lesson4")
?diamong
?diamond
?diamonds
data("diamonds")
data(diamonds)
names(diamonds)
head(diamonds)
ggplot(data = diamons, aes(x = x, y = price)) +
geom_point()
ggplot(data = diamonds, aes(x = x, y = price)) +
geom_point()
ggplot(data = diamonds, aes(x = x, y = price)) +
geom_point(alpha = 1/10)
ggplot(data = diamonds, aes(x = x, y = price)) +
geom_point(alpha = 1/50)
ggplot(data = diamonds, aes(x = x, y = price)) +
geom_point(alpha = 1/10)
ggplot(data = diamonds, aes(x = x, y = price)) +
geom_point(alpha = 1/10) +
coord_trans(y = "sqrt")
ggplot(data = diamonds, aes(x = x, y = price)) +
geom_point(alpha = 1/10) +
coord_trans(y = "log1")
ggplot(data = diamonds, aes(x = x, y = price)) +
geom_point(alpha = 1/10) +
coord_trans(y = "log2")
ggplot(data = diamonds, aes(x = x, y = price)) +
geom_point(alpha = 1/5) +
coord_trans(y = "log2")
cor(diamonds$x, diamonds$price)
cor.test(diamonds$x, diamonds$price)
cor.test(diamonds$price, diamonds$x)
cor.test(diamonds$y, diamonds$price)
cor.test(diamonds$z, diamonds$price)
range(diamonds$z)
ggplot(data = diamonds, aes(x = depth, y = price)) +
geom_point(alpha = 1/5)
ggplot(data = diamonds, aes(x = depth, y = price)) +
geom_point(alpha = 1/100) +
scale_x_continuous(breaks = seq(0, 80, 2))
cor.test(diamonds$depth, diamonds$price)
ggplot(data = diamonds, aes(x = carat, y = price)) +
geom_point(alpha = 1/100)
grid.arrange(p1, p2, ncol =1)
p1 <- ggplot(data = diamonds, aes(x = carat, y = price)) +
geom_point(alpha = 1/100)
p1 <- ggplot(data = diamonds, aes(x = carat, y = price)) +
geom_point(alpha = 1/100)
p2 <- ggplot(data = diamonds, aes(x = carat, y = price)) +
geom_point(alpha = 1/100) +
xlim(0, quantile(diamonds$carat, 0.99)) +
ylim(0, quantile(diamonds$price, 0.99))
library(gridExtra)
grid.arrange(p1, p2, ncol =1)
diamonds$volume = with(diamonds, x * y * z)
names(diamonds)
diamonds
ggplot(data = diamonds, aes(x = volume, y = price)) +
geom_point(alpha = 1/100)
ggplot(data = diamonds, aes(x = volume, y = price)) +
geom_point(alpha = 1/100) +
xlim(0, quantile(diamonds$volume, 0.99))
ggplot(data = diamonds, aes(x = volume, y = price)) +
geom_point(alpha = 1/100) +
xlim(0, quantile(diamonds$volume, 0.99)) +
ylim(0, quantile(diamonds$price, 0.99)) +
scale_x_continuous(breaks = seq(0, 400, 20))
ggplot(data = diamonds, aes(x = volume, y = price)) +
geom_point(alpha = 1/100) +
xlim(0, quantile(diamonds$volume, 0.99)) +
ylim(0, quantile(diamonds$price, 0.99))
cor.test(diamonds$volume, diamonds$price)
?subset
names(diamonds)
range(diamonds$volume)
a = with(diamonds, subset(volume != 0 & volume < 800))
a <- with(diamonds, subset(volume != 0 & volume < 800))
a <- subset(diamonds, volume != 0 & volume < 800))
a <- subset(diamonds, volume != 0 & volume < 800)
a <- subset(diamonds$volume, volume != 0 & volume < 800)
cor.test(a, subset(diamonds$price))
cor.test(a, diamonds$price)
cor.test(a$volume, a$price)
?geom_smooth
ggplot(data = a, aes(x = volume, y = price)) +
geom_point(alpha = 1/100) +
xlim(0, quantile(diamonds$volume, 0.99)) +
ylim(0, quantile(diamonds$price, 0.99)) +
geom_smooth(method = "lm", color = 'red')
library(ggplot2)
ggplot(data = a, aes(x = volume, y = price)) +
geom_point(alpha = 1/100) +
xlim(0, quantile(diamonds$volume, 0.99)) +
ylim(0, quantile(diamonds$price, 0.99)) +
geom_smooth(method = "lm", color = 'red')
ggplot(data = a, aes(x = volume, y = price)) +
geom_point(alpha = 1/100) +
geom_smooth(method = "lm", color = 'red')
+
xlim(0, quantile(a$volume, 0.99)) +
ylim(0, quantile(a$price, 0.99))
ggplot(data = a, aes(x = volume, y = price)) +
geom_point(alpha = 1/100) +
xlim(0, quantile(a$volume, 0.99)) +
ylim(0, quantile(a$price, 0.99)) +
geom_smooth(method = "lm", color = 'red')
library(dplyr)
str(diamonds)
?dplyr
diamonds_clarity <- diamonds %>%
group_by(clarity) %>%
summarise(mean_price = mean(price),
median_price = median(price),
min_price = min(price),
max_price = max(price),
n = n())
View(diamonds_clarity)
diamondsByClarity <- diamonds %>%
group_by(clarity) %>%
summarise(mean_price = mean(price),
median_price = median(price),
min_price = min(price),
max_price = max(price),
n = n())
diamonds_by_clarity <- group_by(diamonds, clarity)
diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
bar1 <-
ggplot(data = diamonds_mp_by_clarity, aes(x = clarity, y = mean_price)) +
geom_bar()
ggplot(data = diamonds_mp_by_clarity, aes(x = clarity, y = mean_price)) +
geom_bar()
?geom_bar
bar1 <-
ggplot(data = diamonds_mp_by_clarity, aes(x = clarity)) +
geom_bar()
ggplot(data = diamonds_mp_by_clarity, aes(x = clarity)) +
geom_bar()
?geom_histogram
ggplot(data = diamonds_mp_by_clarity, aes(x = clarity, y = mean_price)) +
geom_bar()
ggplot(data = diamonds_mp_by_clarity, aes(x = clarity, y = mean_price)) +
geom_col()
bar1 <- ggplot(data = diamonds_mp_by_clarity, aes(x = clarity, y = mean_price)) +
geom_col()
bar2 <- ggplot(data = diamonds_mp_by_color, aes(x = clarity, y = mean_price)) +
geom_col()
library(gridExtra)
grid.arrange(bar1, bar2, ncol =1)
bar1 <- ggplot(data = diamonds_mp_by_clarity, aes(x = clarity, y = mean_price)) +
geom_col()
bar2 <- ggplot(data = diamonds_mp_by_color, aes(x = clarity, y = mean_price)) +
geom_col()
library(gridExtra)
grid.arrange(bar1, bar2, ncol =1)
bar2 <- ggplot(data = diamonds_mp_by_color, aes(x = color, y = mean_price)) +
geom_col()
grid.arrange(bar1, bar2, ncol =1)
?diamonds
getwd()
dir()
dir()
pf <- read.csv('agriculture_land.csv', sep = '\t')
View(pf)
View(pf)
pf <- read.csv('agriculture_land.csv', header = TRUE, sep = ',')
View(pf)
