bar2 <- ggplot(data = diamonds_mp_by_color, aes(x = color, y = mean_price)) +
geom_col()
grid.arrange(bar1, bar2, ncol =1)
?diamonds
getwd()
dir()
dir()
pf <- read.csv('agriculture_land.csv', sep = '\t')
View(pf)
View(pf)
pf <- read.csv('agriculture_land.csv', header = TRUE, sep = ',')
View(pf)
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) + geom_histogram()
library(ggplot2)
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) + geom_histogram()
pd <- read.csv('pseudo_facebook.tsv', sep = '\t')
library(ggplot2)
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) + geom_histogram()
pf <- read.csv('pseudo_facebook.tsv', sep = '\t')
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) + geom_histogram()
ggplot(aes(x = gender),
data = subset(pf, !is.na(gender))) + geom_histogram()
ggplot(aes(x = genderage),
data = subset(pf, !is.na(gender))) + geom_histogram()
ggplot(aes(x = age),
data = subset(pf, !is.na(gender))) + geom_histogram()
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) + geom_boxplot()
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) + geom_boxplot() +
stat_summary(fun.y = mean, geom = 'point', shape =4)
ggplot(aes(x = gender, y = friend_count),
data = subset(pf, !is.na(gender))) +
geom_line()
ggplot(aes(x = gender, y = friend_count),
data = subset(pf, !is.na(gender))) +
geom_line(aes(color = gender))
ggplot(aes(x = gender, y = friend_count),
data = subset(pf, !is.na(gender))) +
geom_line(aes(color = gender), stat = 'summary', fun.y = median)
ggplot(aes(x = age, y = friend_count),
data = subset(pf, !is.na(gender))) +
geom_line(aes(color = gender), stat = 'summary', fun.y = median)
library(dplyr)
?group_by
?ungroup
#pf.fc_by_age_gender <-
pf %>%
group_by(age) %>%
summarise(n = n())
names(pf)
#pf.fc_by_age_gender <-
pf %>%
group_by(age) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n())
?ungroup
suppressMessages(library(dplyr))
？suppressMessages
?suppressMessages
group_by(c(age, gender) %>%
#pf.fc_by_age_gender <-
pf %>%
group_by(c(age, gender)) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n())
#pf.fc_by_age_gender <-
pf %>%
library(dplyr)
#pf.fc_by_age_gender <-
pf %>%
group_by(c(age, gender)) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n())
pf.fc_by_age_gender %>%
ungroup() %>%
summarise(n = sum(n))
pf.fc_by_age_gender <- pf %>%
group_by(c(age, gender)) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n())
pf.fc_by_age_gender <- pf %>%
group_by(age)) %>%
pf.fc_by_age_gender <- pf %>%
group_by(age) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n())
pf.fc_by_age_gender %>%
ungroup() %>%
summarise(n = sum(n))
pf.fc_by_age_gender %>%
ungroup()
pf.fc_by_age_gender %>%
ungroup(gender)
pf.fc_by_age_gender <- pf %>%
group_by(age) %>%
ungroup(gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n())
pf.fc_by_age_gender
#pf.fc_by_age_gender <-
pf %>%
group_by(age) %>%
ungroup(gender)
#pf.fc_by_age_gender <-
pf %>%
group_by(age, gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n())
pf.fc_by_age_gender <- pf %>%
group_by(age, gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n())
pf.fc_by_age_gender
pf.fc_by_age_gender <- pf %>%
group_by(age, gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n()) %>%
ungroup() %>%
arrange(age)
pf.fc_by_age_gender
# anwser
pf.fc_by_age_gender <- pf %>%
filter(is.na(gender)) %>%
group_by(age, gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n()) %>%
ungroup() %>%
arrange(age)
pf.fc_by_age_gender
# anwser
pf.fc_by_age_gender <- pf %>%
filter(!is.na(gender)) %>%
group_by(age, gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n()) %>%
ungroup() %>%
arrange(age)
pf.fc_by_age_gender
ggplot(data = pf.fc_by_age_gender, aes(x = age, y = median_friend_count)) +
geom_line()
library(ggplot2)
ggplot(data = pf.fc_by_age_gender, aes(x = age, y = median_friend_count)) +
geom_line()
ggplot(data = pf.fc_by_age_gender, aes(x = age, y = median_friend_count, color = gender)) +
geom_line()
library(tidyr)
names(pf.fc_by_age_gender)
pf.fc_by_age_gender
pf.fc_by_age_gender.wide <- subset(pf.fc_by_age_gender[c('age', 'gender', 'median_friend_count')],
!is.na(gender)) %>%
spread(gender, median_friend_count) %>%
mutate(ratio = male / female)
pf.fc_by_age_gender.wide
ggplot(data = pf.fc_by_age_gender.wide, aes(x = age, y = ratio)) +
geom_line()
ggplot(data = pf.fc_by_age_gender.wide, aes(x = age, y = ratio)) +
geom_line() +
geom_line(aes(x = age, y = 1))
ggplot(data = pf.fc_by_age_gender.wide, aes(x = age, y = ratio)) +
geom_line() +
geom_line(aes(x = age, y = 1, color = 'red'))
?geom_hline
ggplot(data = pf.fc_by_age_gender.wide, aes(x = age, y = ratio)) +
geom_line() +
geom_hline(aes(x = age, y = 1, color = 'red'))
ggplot(data = pf.fc_by_age_gender.wide, aes(x = age, y = ratio)) +
geom_line() +
geom_hline(aes(y = 1, color = 'red'))
ggplot(data = pf.fc_by_age_gender.wide, aes(x = age, y = ratio)) +
geom_line() +
geom_hline(aes(yintercept = 1, color = 'red'))
ggplot(data = pf.fc_by_age_gender.wide, aes(x = age, y = ratio)) +
geom_line() +
geom_hline(aes(yintercept = 1, color = 'red', linetype = dashed))
ggplot(data = pf.fc_by_age_gender.wide, aes(x = age, y = ratio)) +
geom_line() +
geom_hline(aes(yintercept = 1, color = 'red', linetype = 2))
ggplot(data = pf.fc_by_age_gender.wide, aes(x = age, y = ratio)) +
geom_line() +
geom_hline(aes(yintercept = 1, color = 'red'), linetype = 2)
ggplot(data = pf.fc_by_age_gender.wide, aes(x = age, y = ratio)) +
geom_line() +
geom_hline(yintercept = 1, color = 'red', alpha = 0.3, linetype = 2)
ggplot(data = pf.fc_by_age_gender.wide, aes(x = age, y = 1/ratio)) +
geom_line() +
geom_hline(yintercept = 1, color = 'red', alpha = 0.3, linetype = 2)
View(pf)
View(pf)
year_joined <-
pf$tenure
year_joined <- pf$tenure
year_joined
year_joined <- pf$tenure%%365
year_joined
year_joined <- 2014 - ceiling(pf$tenure/365)
year_joined
pf$year_joined <- 2014 - ceiling(pf$tenure/365)
head(pf)
head(pf$year_joined)
summary(pf$year_joined)
table(pf$year_joined)
?cut
pf$year_joined.bucke <- cut(pf$year_joined, breaks = c(2009, 2011, 2012, 2014))
pf$year_joined.bucke <-
cut(pf$year_joined, breaks = c(2009, 2011, 2012, 2014))
cut(pf$year_joined, breaks = c(2009, 2011, 2012, 2014))
summary(pf$year_joined.bucke)
summary(pf$year_joined)
table(pf$year_joined)
pf$year_joined.bucke <- cut(pf$year_joined, breaks = c(2004,2009, 2011, 2012, 2014))
summary(pf$year_joined.bucke)
table(pf$year_joined.bucke)
ggplot(data = pf, aes(x = age, y = friend_count)) +
geom_line()
ggplot(data = subset(pf, !is.na(year_joined.bucke)), aes(x = age, y = friend_count)) +
geom_line(aes(color = gender))
ggplot(data = subset(pf, !is.na(pf$year_joined.bucke)), aes(x = age, y = friend_count)) +
geom_line(aes(color = gender))
ggplot(data = subset(pf, !is.na(gender)), aes(x = age, y = friend_count)) +
geom_line(aes(color = gender))
ggplot(data = subset(pf, !is.na(gender)), aes(x = age, y = friend_count)) +
geom_line(aes(color = gender), stat = 'summary', fun.y = median)
ggplot(data = subset(pf, !is.na(year_joined.bucke)), aes(x = age, y = friend_count)) +
geom_line(aes(color = year_joined.bucke), stat = 'summary', fun.y = median) +
pf$year_joined.bucke <- cut(pf$year_joined, breaks = c(2004,2009, 2011, 2012, 2014))
pf$year_joined.bucke <- cut(pf$year_joined, breaks = c(2004,2009, 2011, 2012, 2014))
ggplot(data = subset(pf, !is.na(year_joined.bucke)), aes(x = age, y = friend_count)) +
geom_line(aes(color = year_joined.bucke), stat = 'summary', fun.y = median) +
ggplot(data = subset(pf, !is.na(year_joined.bucke)), aes(x = age, y = friend_count)) +
geom_line(aes(color = year_joined.bucke), stat = 'summary', fun.y = median)
ggplot(data = subset(pf, !is.na(year_joined.bucke)), aes(x = age, y = friend_count)) +
geom_line(aes(color = year_joined.bucke))
ggplot(data = subset(pf, !is.na(year_joined.bucke)), aes(x = age, y = friend_count)) +
geom_line(aes(color = year_joined.bucke), stat = 'summary', fun.y = median)
ggplot(data = subset(pf, !is.na(year_joined.bucke)), aes(x = age, y = friend_count)) +
geom_line(aes(color = year_joined.bucke), stat = 'summary', fun.y = mean)
ggplot(data = subset(pf, !is.na(year_joined.bucke)), aes(x = age, y = friend_count)) +
geom_line(aes(color = year_joined.bucke), stat = 'summary', fun.y = median) +
geom_line(aes(color = year_joined.bucke), stat = 'summary', fun.y = mean, linetype = 2)
ggplot(data = subset(pf, !is.na(year_joined.bucke)), aes(x = age, y = friend_count)) +
geom_line(aes(color = year_joined.bucke), stat = 'summary', fun.y = median) +
geom_line(aes(color = year_joined.bucke), stat = 'summary', fun.y = mean, linetype = 5)
ggplot(data = subset(pf, !is.na(year_joined.bucke)), aes(x = age, y = friend_count)) +
geom_line(aes(color = year_joined.bucke), stat = 'summary', fun.y = median) +
geom_line(aes(color = year_joined.bucke), stat = 'summary', fun.y = mean, linetype = 5, alpha = 0.3)
ggplot(data = subset(pf, !is.na(year_joined.bucke)), aes(x = age, y = friend_count)) +
geom_line(aes(color = year_joined.bucke), stat = 'summary', fun.y = median) +
geom_line(stat = 'summary', fun.y = mean, linetype = 2, alpha = 0.3)
ggplot(data = subset(pf, !is.na(year_joined.bucke)), aes(x = age, y = friend_count)) +
geom_line(aes(color = year_joined.bucke), stat = 'summary', fun.y = median) +
geom_line(stat = 'summary', fun.y = mean, linetype = 2, alpha = 0.3, color = 'black')
ggplot(data = subset(pf, !is.na(year_joined.bucke)), aes(x = age, y = friend_count)) +
geom_line(aes(color = year_joined.bucke), stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = mean, linetype = 2, alpha = 0.3, color = 'black')
subset(pf, !is.na(tenure)) %>%
mutate(friend_rate = friend_count / tenure)
View(pf)
summary(subset(pf, !is.na(tenure)) %>%
mutate(friend_rate = friend_count / tenure))
subset(pf, !is.na(tenure)) %>%
mutate(friend_rate = friend_count / tenure) %>%
select(friend_rate)
pf$friend_rate <- subset(pf, !is.na(tenure)) %>%
mutate(friend_rate = friend_count / tenure) %>%
select(friend_rate)
summary(pf$friend_rate <- subset(pf, !is.na(tenure)) %>%
mutate(friend_rate = friend_count / tenure) %>%
select(friend_rate))
summary(subset(pf, !is.na(tenure)) %>%
mutate(friend_rate = friend_count / tenure) %>%
select(friend_rate))
table(subset(pf, !is.na(tenure)) %>%
mutate(friend_rate = friend_count / tenure) %>%
select(friend_rate))
summary(subset(pf, !is.na(tenure)) %>%
mutate(friend_rate = friend_count / tenure) %>%
select(friend_rate))
summary(subset(pf, tenure >= 1) %>%
mutate(friend_rate = friend_count / tenure) %>%
select(friend_rate))
# anwser
with(subset(pf, tenure >= 1), summary(friend_count / tenure))
names(pf)
ggplot(data = subset(pf, tenure >= 1), aes(x = age, y = friendships_initiated)) +
geom_line(color = year_joined.bucke)
ggplot(data = subset(pf, tenure >= 1), aes(x = age, y = friendships_initiated)) +
geom_line(color = pf$year_joined.bucke)
ggplot(data = subset(pf, tenure >= 1), aes(x = tenure, y = friendships_initiated)) +
geom_line()
ggplot(data = subset(pf, tenure >= 1), aes(x = tenure, y = friendships_initiated)) +
geom_line(color = year_joined.bucke)
pf_tenure <- subset(pf, tenure >= 1)
ggplot(data = subset(pf, tenure >= 1), aes(x = tenure, y = friendships_initiated)) +
geom_line(color = year_joined.bucke)
ggplot(data = pf_tenure, aes(x = tenure, y = friendships_initiated)) +
geom_line(color = year_joined.bucke)
ggplot(data = pf_tenure, aes(x = tenure, y = friendships_initiated)) +
geom_line(aes(color = year_joined.bucke), stat = 'summary', fun.y = mean)
# anwser
ggplot(data = subset(pf, tenure >= 1), aes(x = tenure, y = friendships_initiated / tenure)) +
geom_line(aes(color = year_joined.bucke))
ggplot(data = pf_tenure, aes(x = tenure, y = friendships_initiated / tenure)) +
geom_line(aes(color = year_joined.bucke), stat = 'summary', fun.y = mean)
# anwser
ggplot(data = subset(pf, tenure >= 1), aes(x = tenure, y = friendships_initiated / tenure)) +
geom_line(aes(color = year_joined.bucke))
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure >= 1)) +
geom_line(aes(color = year_joined.bucket),
stat = 'summary',
fun.y = mean)
names(pf)[names(df) == 'year_joined.bucke'] <- 'year_joined.bucke'
names(pf)
> names(pf)[names(df) == 'year_joined.bucke'] <- 'year_joined.bucket'
names(pf)[names(df) == 'year_joined.bucke'] <- 'year_joined.bucket'
names(pf)
names(pf)[names(pf) == 'year_joined.bucke'] <- 'year_joined.bucket'
names(pf)
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure >= 1)) +
geom_line(aes(color = year_joined.bucket),
stat = 'summary',
fun.y = mean)
ggplot(aes(x = 7 * round(tenure / 7), y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean)
ggplot(aes(x = 30 * round(tenure / 30), y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean)
ggplot(aes(x = 90 * round(tenure / 90), y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean)
?geom_smooth
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean) +
geom_smooth()
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean) +
geom_smooth(span=0.3)
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean) +
geom_smooth(span=0.8)
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean) +
geom_smooth(method = 'line')
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean) +
geom_smooth(method = 'lm')
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean) +
geom_smooth(span = 0.3)
#answer
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket)) +
geom_smooth(span = 0.3)
#answer
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_smooth(aes(color = year_joined.bucket)) +
#answer
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_smooth(aes(color = year_joined.bucket))
#answer
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure >= 1)) +
geom_smooth(aes(color = year_joined.bucket))
yo <- read.csv('yogurt.csv')
yo
str(yo)
# 转换id变量，由int到factor
yo$id <- factor(yo$id)
str(yo)
ggplot(data = yo, aes(x = price)) +
geom_histogram()
ggplot(data = yo, aes(x = price)) +
geom_histogram(bins = 30)
ggplot(data = yo, aes(x = price)) +
geom_histogram(bins = 10)
summary(yo)
length(yo$price)
table(yo$price)
?transform
View(yo)
View(yo)
names(yo)
transform(yo, a = (strawberry + blueberry + pina.colada + plain + mixed.berry))
colnames(yo[a]) <- all.purchases
colnames(yo[a]) <- 'all.purchases'
colnames(yo$a) <- 'all.purchases'
names(yo)[names(yo) == 'a'] <- 'all.purchases'
yo
names(yo)
transform(yo, all.purchases = (strawberry + blueberry + pina.colada + plain + mixed.berry))
yo
yo <- transform(yo, all.purchases = (strawberry + blueberry + pina.colada + plain + mixed.berry))
yo
ggplot(data = yo, aes(x = time, y = price)) +
geom_point()
ggplot(data = yo, aes(x = time, y = price)) +
geom_point(alpha = 0.3)
ggplot(data = yo, aes(x = time, y = price)) +
geom_jitter(alpha = 0.3)
ggplot(data = yo, aes(x = time, y = price)) +
geom_jitter(alpha = 0.1)
# answer
ggplot(data = yo, aes(x = time, y = price)) +
geom_jitter(alpha = 1/4, shape = 21)
# answer
ggplot(data = yo, aes(x = time, y = price)) +
geom_jitter(alpha = 1/4, shape = 21, fill = I('#F79420'))
sample.ids <- sample(levels(yo$id), 16)
sample.ids
length(sample.ids)
?levels
?sample
# set the seed for reproducible results
set.seed(4230)
ggplot(data = subset(yo, id %in% sample.ids),
aes(x = time, y = price)) +
facet_wrap( ~ id) +
geom_line()
ggplot(data = subset(yo, id %in% sample.ids),
aes(x = time, y = price)) +
facet_wrap( ~ id) +
geom_line() +
geom_point(aes(size = all.purchases), pch = 1)
install.packages('GGally')
theme_set(theme_minimal(20))
# set the seed for reproducible results
set.seed(1836)
names(pf)
names(pf_subset)
pf_subset <- pf[,c(2:15)]
names(pf_subset)
ggpairs(pf_subset[sample.int(nrow(pf_subset),1000),])
#install.packages('GGally')
library(GGally)
theme_set(theme_minimal(20))
# set the seed for reproducible results
set.seed(1836)
pf_subset <- pf[,c(2:15)]
names(pf_subset)
ggpairs(pf_subset[sample.int(nrow(pf_subset),1000),])
nci <- read.csv('nci.tsv', sep = '\t')
# changing the colnames to produce a nicer plot
colnames(nci) <- c(1:64)
# answer
nci <- read.table('nci.tsv')
# answer
nci <- read.table('nci.tsv')
# changing the colnames to produce a nicer plot
colnames(nci) <- c(1:64)
nci <- read.csv('nci.tsv', sep = '\t')
str(nci)
summary(nci)
# answer
nci <- read.table('nci.tsv')
# changing the colnames to produce a nicer plot
colnames(nci) <- c(1:64)
summary(nci)
str(nci)
nci.long.samp <- melt(as.matrix(nci[1:200,]))
library(reshape2)
nci.long.samp <- melt(as.matrix(nci[1:200,]))
names(nci.long.samp) <- c("gene", "case", "value")
head(nci.long.samp)
ggplot(aes(y = gene, x = case, fill = value),
data = nci.long.samp) +
geom_tile() +
scale_fill_gradientn(colours = colorRampPalette(c("blue", "red"))(100))
